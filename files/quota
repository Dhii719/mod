#!/bin/bash

function send-log() {
    CHATID=$(grep -E "^#bot# " "/etc/bot/.bot.db" | cut -d ' ' -f 3)
    KEY=$(grep -E "^#bot# " "/etc/bot/.bot.db" | cut -d ' ' -f 2)
    TIME="10"
    URL="https://api.telegram.org/bot$KEY/sendMessage"
    TEXT="
<code>────────────────────</code>
<b>⚠️NOTIF QUOTA HABIS⚠️</b>
<code>────────────────────</code>
<code>Username  : </code><code>$user</code>
<code>Usage     : </code><code>$total</code>
<code>Limit Quota : </code><code>$cekdulu</code>
<code>────────────────────</code>
"
    curl -s --max-time $TIME -d "chat_id=$CHATID&disable_web_page_preview=1&text=$TEXT&parse_mode=html" $URL >/dev/null
}

function con() {
    local -i bytes=$1;
    if [[ $bytes -lt 1024 ]]; then
        echo "${bytes}B"
    elif [[ $bytes -lt 1048576 ]]; then
        echo "$(( (bytes + 1023)/1024 ))KB"
    elif [[ $bytes -lt 1073741824 ]]; then
        echo "$(( (bytes + 1048575)/1048576 ))MB"
    else
        echo "$(( (bytes + 1073741823)/1073741824 ))GB"
    fi
}

function cekquota() {
    local user="$1"
    local limit="$2"
    local usage="$3"

    if [[ $usage -gt $limit ]]; then
        echo "Quota exceeded for user: $user ($usage > $limit)"
        return 1
    else
        return 0
    fi
}

function update-quota() {
    local user="$1"
    local usage="$2"

    # Update the usage for the user (e.g., store in a database/file)
    echo "$usage" > "/etc/limit/$user"
}

function start-xray() {
    systemctl start xray
}

function vmess() {
    while true; do
        sleep 30
        cekvmess
        data=($(cat /etc/xray/config.json | grep '^###' | cut -d ' ' -f 2 | sort | uniq))
        for user in "${data[@]}"; do
            if [ -e "/etc/vmess/${user}" ]; then
                cekdulu=$(cat "/etc/vmess/${user}")
                if [[ ${#cekdulu} -gt 1 ]]; then
                    if [ -e "/etc/limit/vmess/${user}" ]; then
                        pakai=$(cat "/etc/limit/vmess/${user}")
                        if cekquota "$user" "$cekdulu" "$pakai"; then
                            echo "Usage within limit for user: $user ($pakai <= $cekdulu)"
                        else
                            echo "Usage exceeded for user: $user"
                            # Nonaktifkan akun sementara
                            systemctl stop xray
                            send-log
                        fi
                    else
                        echo "Limit not set for user: $user"
                    fi

                    # Memeriksa apakah pemakaian data telah diperbarui di bawah batas
                    if [[ $pakai -le $cekdulu ]]; then
                        echo "Usage back within limit for user: $user"
                        # Memulai kembali layanan Xray
                        start-xray
                    fi
                else
                    echo "No quota set for user: $user"
                fi
            else
                echo "User config not found for user: $user"
            fi
        done
    done
}

# Tambahkan logika serupa untuk vless() dan trojan()

function vless() {
    while true; do
        sleep 30
        cekvless
        data=($(cat /etc/xray/config.json | grep '^#&' | cut -d ' ' -f 2 | sort | uniq))
        for user in "${data[@]}"; do
            if [ -e "/etc/vless/${user}" ]; then
                cekdulu=$(cat "/etc/vless/${user}")
                if [[ ${#cekdulu} -gt 1 ]]; then
                    if [ -e "/etc/limit/vless/${user}" ]; then
                        pakai=$(cat "/etc/limit/vless/${user}")
                        if cekquota "$user" "$cekdulu" "$pakai"; then
                            echo "Usage within limit for user: $user ($pakai <= $cekdulu)"
                        else
                            echo "Usage exceeded for user: $user"
                            # Nonaktifkan akun sementara
                            systemctl stop xray
                            send-log
                        fi
                    else
                        echo "Limit not set for user: $user"
                    fi

                    # Memeriksa apakah pemakaian data telah diperbarui di bawah batas
                    if [[ $pakai -le $cekdulu ]]; then
                        echo "Usage back within limit for user: $user"
                        # Memulai kembali layanan Xray
                        start-xray
                    fi
                else
                    echo "No quota set for user: $user"
                fi
            else
                echo "User config not found for user: $user"
            fi
        done
    done
}

function trojan() {
    while true; do
        sleep 30
        cektrojan
        data=($(cat /etc/xray/config.json | grep '^#!' | cut -d ' ' -f 2 | sort | uniq))
        for user in "${data[@]}"; do
            if [ -e "/etc/trojan/${user}" ]; then
                cekdulu=$(cat "/etc/trojan/${user}")
                if [[ ${#cekdulu} -gt 1 ]]; then
                    if [ -e "/etc/limit/trojan/${user}" ]; then
                        pakai=$(cat "/etc/limit/trojan/${user}")
                        if cekquota "$user" "$cekdulu" "$pakai"; then
                            echo "Usage within limit for user: $user ($pakai <= $cekdulu)"
                        else
                            echo "Usage exceeded for user: $user"
                            # Nonaktifkan akun sementara
                            systemctl stop xray
                            send-log
                        fi
                    else
                        echo "Limit not set for user: $user"
                    fi

                    # Memeriksa apakah pemakaian data telah diperbarui di bawah batas
                    if [[ $pakai -le $cekdulu ]]; then
                        echo "Usage back within limit for user: $user"
                        # Memulai kembali layanan Xray
                        start-xray
                    fi
                else
                    echo "No quota set for user: $user"
                fi
            else
                echo "User config not found for user: $user"
            fi
        done
    done
}

# Memulai fungsi yang sesuai tergantung pada argumen yang diberikan
if [[ ${1} == "vmess" ]]; then
    vmess
elif [[ ${1} == "vless" ]]; then
    vless
elif [[ ${1} == "trojan" ]]; then
    trojan
fi
