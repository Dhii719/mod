#!/bin/bash

function send_log() {
    CHATID=$(grep -E "^#bot# " "/etc/bot/.bot.db" | cut -d ' ' -f 3)
    KEY=$(grep -E "^#bot# " "/etc/bot/.bot.db" | cut -d ' ' -f 2)
    TIME="10"
    URL="https://api.telegram.org/bot$KEY/sendMessage"
    TEXT="
<code>────────────────────</code>
<b>⚠️ NOTIFIKASI BATASAN AKUN ⚠️</b>
<code>────────────────────</code>
<code>Username  : </code><code>$user</code>
<code>Batasan IP : </code><code>$iplimit</code>
<code>────────────────────</code>
"
    curl -s --max-time $TIME -d "chat_id=$CHATID&disable_web_page_preview=1&text=$TEXT&parse_mode=html" $URL >/dev/null
}

function handle_excess_connections() {
    local user="$1"
    local iplimit="$2"
    local threshold=3  # Jumlah koneksi normal untuk menjalankan kembali akun

    # Cek jumlah koneksi saat ini
    local connection_count=$(cat /var/log/xray/access.log | grep "$user" | cut -d " " -f 3 | sed 's/tcp://g' | cut -d ":" -f 1 | sort | uniq | wc -l)

    if [[ $connection_count -gt $iplimit ]]; then
        # Koneksi melebihi batasan, nonaktifkan akun sementara
        echo "Akun $user: Koneksi melebihi batasan. Nonaktifkan sementara..."

        # Dapat melakukan tindakan nonaktifkan akun di sini
        # Contoh: menambahkan tag untuk mengidentifikasi akun yang nonaktif

        # Kirim notifikasi
        send_log

    elif [[ $connection_count -le $threshold ]]; then
        # Jumlah koneksi kembali normal, aktifkan kembali akun
        echo "Akun $user: Jumlah koneksi normal. Aktifkan kembali..."

        # Dapat melakukan tindakan untuk mengaktifkan kembali akun di sini
        # Contoh: menghapus tag untuk mengaktifkan akun kembali

        # Kirim notifikasi jika akun sudah normal kembali
        send_log
    fi
}

function vmip() {
    # LIMIT VMESS IP
    echo -n > /var/log/xray/access.log
    sleep 1
    data=( $(ls /etc/kyt/limit/vmess/ip) )

    for user in "${data[@]}"; do
        iplimit=$(cat /etc/kyt/limit/vmess/ip/$user)
        handle_excess_connections "$user" "$iplimit"
        sleep 0.1
    done
}

function vlip() {
    # LIMIT VLESS IP
    echo -n > /var/log/xray/access.log
    sleep 1
    data=( $(ls /etc/kyt/limit/vless/ip) )

    for user in "${data[@]}"; do
        iplimit=$(cat /etc/kyt/limit/vless/ip/$user)
        handle_excess_connections "$user" "$iplimit"
        sleep 0.1
    done
}

function trip() {
    # LIMIT IP TROJAN
    echo -n > /var/log/xray/access.log
    sleep 1
    data=( $(ls /etc/kyt/limit/trojan/ip) )

    for user in "${data[@]}"; do
        iplimit=$(cat /etc/kyt/limit/trojan/ip/$user)
        handle_excess_connections "$user" "$iplimit"
        sleep 0.1
    done
}

# Main Script Execution
if [[ ${1} == "vmip" ]]; then
    vmip
elif [[ ${1} == "vlip" ]]; then
    vlip
elif [[ ${1} == "trip" ]]; then
    trip
fi
